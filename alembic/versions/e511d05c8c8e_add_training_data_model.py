"""Add training data model

Revision ID: e511d05c8c8e
Revises: af42df90ab3c
Create Date: 2025-01-26 13:43:43.122889

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e511d05c8c8e'
down_revision: Union[str, None] = 'af42df90ab3c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('chats')
    op.add_column('training_data', sa.Column('original_filename', sa.String(length=255), nullable=False))
    op.add_column('training_data', sa.Column('file_size', sa.Integer(), nullable=False))
    op.add_column('training_data', sa.Column('mime_type', sa.String(length=100), nullable=False))
    op.alter_column('training_data', 'file_path',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=512),
               existing_nullable=False)
    op.alter_column('training_data', 'status',
               existing_type=postgresql.ENUM('TRAINING', 'COMPLETED', 'FAILED', name='modelstatus'),
               type_=sa.String(length=20),
               existing_nullable=False)
    op.drop_constraint('training_data_user_id_fkey', 'training_data', type_='foreignkey')
    op.drop_constraint('training_data_project_id_fkey', 'training_data', type_='foreignkey')
    op.create_foreign_key(None, 'training_data', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'training_data', 'projects', ['project_id'], ['id'])
    op.drop_column('training_data', 'description')
    op.drop_column('training_data', 'name')
    op.drop_column('training_data', 'data')
    op.drop_column('training_data', 'updated_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('training_data', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('training_data', sa.Column('data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False))
    op.add_column('training_data', sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('training_data', sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'training_data', type_='foreignkey')
    op.drop_constraint(None, 'training_data', type_='foreignkey')
    op.create_foreign_key('training_data_project_id_fkey', 'training_data', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('training_data_user_id_fkey', 'training_data', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('training_data', 'status',
               existing_type=sa.String(length=20),
               type_=postgresql.ENUM('TRAINING', 'COMPLETED', 'FAILED', name='modelstatus'),
               existing_nullable=False)
    op.alter_column('training_data', 'file_path',
               existing_type=sa.String(length=512),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.drop_column('training_data', 'mime_type')
    op.drop_column('training_data', 'file_size')
    op.drop_column('training_data', 'original_filename')
    op.create_table('chats',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('sender_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='chats_project_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='chats_pkey')
    )
    # ### end Alembic commands ###
