"""Add description field to organizations

Revision ID: 00b801594cec
Revises: 0b79c1911baa
Create Date: 2025-10-30 10:52:51.726159

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '00b801594cec'
down_revision: Union[str, None] = '0b79c1911baa'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_ai_usage_logs_feature'), table_name='ai_usage_logs')
    op.drop_index(op.f('ix_ai_usage_logs_id'), table_name='ai_usage_logs')
    op.drop_index(op.f('ix_ai_usage_logs_operation'), table_name='ai_usage_logs')
    op.drop_index(op.f('ix_ai_usage_logs_organization_id'), table_name='ai_usage_logs')
    op.drop_table('ai_usage_logs')
    op.add_column('organizations', sa.Column('description', sa.Text(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('organizations', 'description')
    op.create_table('ai_usage_logs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('organization_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('feature', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('operation', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('tokens_used', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cost', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name=op.f('ai_usage_logs_organization_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('ai_usage_logs_user_id_fkey'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('ai_usage_logs_pkey'))
    )
    op.create_index(op.f('ix_ai_usage_logs_organization_id'), 'ai_usage_logs', ['organization_id'], unique=False)
    op.create_index(op.f('ix_ai_usage_logs_operation'), 'ai_usage_logs', ['operation'], unique=False)
    op.create_index(op.f('ix_ai_usage_logs_id'), 'ai_usage_logs', ['id'], unique=False)
    op.create_index(op.f('ix_ai_usage_logs_feature'), 'ai_usage_logs', ['feature'], unique=False)
    # ### end Alembic commands ###
