[tool.poetry]
name = "fastapi-boilerplate-backend"
version = "0.1.0"
description = "FastAPI boilerplate with authentication, database, and common utilities"
authors = ["Johan Guse <johanguse@gmail.com>"]
readme = "README.md"
packages = [{include = "app"}]
license = "MIT"
repository = "https://github.com/johanguse/fastapi-boilerplate-backend"

[tool.poetry.dependencies]
python = "^3.11"
charset-normalizer = "^3.1.0"  # Needed cause of a bug in poetry
urllib3 = "^2.0"  # Needed cause of a bug in poetry
fastapi = {extras = ["standard"], version = "^0.115.0"}
fastapi-users = {extras = ["oauth", "sqlalchemy"], version = "^13.0.0"}
fastapi-pagination = {extras = ["sqlalchemy"], version = "^0.12.26"}
sqlalchemy = "^2.0.32"
psycopg2-binary = "^2.9.9"
pydantic = {extras = ["email"], version = "^2.8.2"}
alembic = "^1.13.2"
uvicorn = "^0.30.5"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["argon2"], version = "^1.7.4"}
python-dotenv = "^1.0.1"
pydantic-settings = "^2.4.0"
python-multipart = "^0.0.9"
pandas = "^2.2.2"
chardet = "^5.2.0"
fastapi-cors = "^0.0.6"
celery = "^5.4.0"
resend = "^2.4.0"
boto3 = "^1.35.25"
asyncpg = "^0.29.0"
httpx-oauth = "^0.15.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
taskipy = "^1.13.0"
ruff = "^0.5.7"
httpx = "^0.27.0"
testcontainers = {extras = ["postgresql"], version = "^4.8.0"}
factory-boy = "^3.3.0"

[tool.ruff]
target-version = "py311"
line-length = 79
extend-exclude = ['alembic']

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.format]
preview = true
quote-style = 'single'

[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings'

[tool.taskipy.tasks]
lint = 'ruff check app && ruff check app --diff'
format = 'ruff check app --fix && ruff format app'
run_dev = 'fastapi dev app/main.py'
run = 'fastapi run'
pre_test = 'task lint'
test = 'pytest -s -x --cov=app -vv'
post_test = 'coverage run -m pytest --cov=app'

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
